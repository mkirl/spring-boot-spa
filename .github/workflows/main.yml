name: Publish package to the Maven Central Repository
on:
  release:
    types: [created, edited]
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Version Name'
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build package
        run: |
          gradle :spring-boot-starter-spa:build
          gradle :spring-boot-spa-devserver:build

      - name: Publish Library
        run: |
          gradle publish --no-daemon --no-parallel
          gradle closeAndReleaseRepository
        env:
          ORG_GRADLE_PROJECT_VERSION_NAME: ${{ github.event.inputs.versionName }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}

#      - name: Create and push tag
#        run: |
#          git config --global user.email "omeed@safi.ms"
#          git config --global user.name "$GITHUB_ACTOR"
#          git tag -a $TAG -m "Release v$TAG"
#          git push origin $TAG
#        env:
#          TAG: ${{ github.event.inputs.versionName }}
#
#      - name: Create Release on GitHub
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.event.inputs.versionName }}
#          release_name: spring-boot-spa ${{ github.event.inputs.versionName }}
#          draft: true
#          prerelease: false
